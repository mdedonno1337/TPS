Installation
############

The library can simply be cloned in a local repository, and imported. The __init__ module is in charge of loading the correct TPS core module depending of the presence or not of the compiled version.

Cython compilation
~~~~~~~~~~~~~~~~~~

For performance issues, the library is available in C code compiled with Cython, and importable within Python.

Makefile
--------

The compilation is done from within the TPS.TPSCy module with the Makefile available. The entire compilation can be done with:

.. code::

	make build

The distutils package is used in the Makefile to compile the .c file into the compiled library (the compilation command is generated by distutils).

Manual commands
---------------

The first step is to transcode the Cython code (TPSCy.pyx) into C code (TPSCy.c) with the following command:

.. code::

	cython TPSCy.pyx

The produced TPSCy.c file can be compiled with any C compiler with a command similar to:

.. code::

	gcc.exe -I<numpy include> -I<python include> -c TPSCy.c -o build/tpscy.o -O3 -mdll -fopenmp -fdce -ffast-math

This command will produce a .pyd (.dll equivalent) for Windows, and a .so file for Linux. Those files are created in the TPSCy folder, and are imported by the main wrapper (or manually) from within Python.
